/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 11-ago.-2020 15:51:45 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Componente_Componente]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Componente] DROP CONSTRAINT [FK_Componente_Componente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Componente_TipoComponente]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Componente] DROP CONSTRAINT [FK_Componente_TipoComponente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ComponentePerfil_Componente]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ComponentePerfil] DROP CONSTRAINT [FK_ComponentePerfil_Componente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ComponentePerfil_Perfil]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [ComponentePerfil] DROP CONSTRAINT [FK_ComponentePerfil_Perfil]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Evento_Sala]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Evento] DROP CONSTRAINT [FK_Evento_Sala]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Evento_Usuario]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Evento] DROP CONSTRAINT [FK_Evento_Usuario]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_PerfilUsuario_Perfil]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [PerfilUsuario] DROP CONSTRAINT [FK_PerfilUsuario_Perfil]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_PerfilUsuario_Usuario]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [PerfilUsuario] DROP CONSTRAINT [FK_PerfilUsuario_Usuario]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Reserva_Evento]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Reserva] DROP CONSTRAINT [FK_Reserva_Evento]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Reserva_Usuario]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Reserva] DROP CONSTRAINT [FK_Reserva_Usuario]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Usuario_TipoDocumento]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Usuario] DROP CONSTRAINT [FK_Usuario_TipoDocumento]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Componente]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Componente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[ComponentePerfil]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [ComponentePerfil]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Evento]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Evento]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Perfil]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Perfil]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[PerfilUsuario]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [PerfilUsuario]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Reserva]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Reserva]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Sala]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Sala]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TipoComponente]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TipoComponente]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TipoDocumento]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TipoDocumento]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Usuario]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Usuario]
GO

/* Create Tables */

CREATE TABLE [Componente]
(
	[id_componente] int NOT NULL IDENTITY (1, 1),
	[id_componente_padre] int NOT NULL,
	[id_tipo_componente] int NOT NULL,
	[componente] varchar(150) NOT NULL,
	[url_componente] varchar(150) NOT NULL,
	[habilitar_componente] bit NOT NULL,
	[mostrar_componente] bit NOT NULL,
	[detalle_componente] varchar(20) NOT NULL,
	[icono_componente] varchar(20) NULL
)
GO

CREATE TABLE [ComponentePerfil]
(
	[id_componente] int NOT NULL IDENTITY (1, 1),
	[id_perfil] int NOT NULL
)
GO

CREATE TABLE [Evento]
(
	[id_evento] int NOT NULL IDENTITY (1, 1),
	[id_sala] int NOT NULL,
	[id_usuario] int NOT NULL,
	[evento] varchar(50) NOT NULL,
	[fecha_evento] datetime NOT NULL,
	[todal_asistentes] int NOT NULL
)
GO

CREATE TABLE [Perfil]
(
	[id_perfil] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[perfil] varchar(50) NOT NULL
)
GO

CREATE TABLE [PerfilUsuario]
(
	[id_perfil] int NOT NULL,
	[id_usuario] int NOT NULL
)
GO

CREATE TABLE [Reserva]
(
	[id_reserva] int NOT NULL IDENTITY (1, 1),
	[id_evento] int NOT NULL,
	[fecha_reserva] datetime NOT NULL DEFAULT getdate(),
	[id_usuario] int NOT NULL,
	[qr] varchar(max) NOT NULL,
	[consumo] numeric(2,2) NOT NULL,
	[consumo_finalizado] bit NOT NULL DEFAULT 0
)
GO

CREATE TABLE [Sala]
(
	[id_sala] int NOT NULL IDENTITY (1, 1),
	[sala] varchar(50) NOT NULL,
	[cupo] int NOT NULL,
	[ubicacion] varchar(50) NOT NULL
)
GO

CREATE TABLE [TipoComponente]
(
	[id_tipo_componente] int NOT NULL IDENTITY (1, 1),
	[tipo_componente] varchar(50) NOT NULL
)
GO

CREATE TABLE [TipoDocumento]
(
	[id_tipo_documento] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[tipo_documento] varchar(20) NOT NULL
)
GO

CREATE TABLE [Usuario]
(
	[id_usuario] int NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[usuario] varchar(40) NOT NULL,
	[contrasenia] varchar(max) NOT NULL,
	[fecha_usuario] datetime NOT NULL DEFAULT getdate(),
	[correo_usuario] varchar(100) NOT NULL,
	[nombre] varchar(150) NOT NULL,
	[apellido] varchar(150) NOT NULL,
	[id_tipo_documento] int NOT NULL,
	[numero_documento] varchar(12) NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Componente] 
 ADD CONSTRAINT [PK_Componente]
	PRIMARY KEY CLUSTERED ([id_componente] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Componente_Componente] 
 ON [Componente] ([id_componente_padre] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Componente_TipoComponente] 
 ON [Componente] ([id_tipo_componente] ASC)
GO

ALTER TABLE [ComponentePerfil] 
 ADD CONSTRAINT [PK_ComponentePerfil]
	PRIMARY KEY CLUSTERED ([id_componente] ASC,[id_perfil] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ComponentePerfil_Componente] 
 ON [ComponentePerfil] ([id_componente] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_ComponentePerfil_Perfil] 
 ON [ComponentePerfil] ([id_perfil] ASC)
GO

ALTER TABLE [Evento] 
 ADD CONSTRAINT [PK_Evento]
	PRIMARY KEY CLUSTERED ([id_evento] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Evento_Sala] 
 ON [Evento] ([id_sala] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Evento_Usuario] 
 ON [Evento] ([id_usuario] ASC)
GO

ALTER TABLE [Perfil] 
 ADD CONSTRAINT [PK_Perfil]
	PRIMARY KEY CLUSTERED ([id_perfil] ASC)
GO

ALTER TABLE [PerfilUsuario] 
 ADD CONSTRAINT [PK_PerfilUsuario]
	PRIMARY KEY CLUSTERED ([id_perfil] ASC,[id_usuario] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_PerfilUsuario_Perfil] 
 ON [PerfilUsuario] ([id_perfil] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_PerfilUsuario_Usuario] 
 ON [PerfilUsuario] ([id_usuario] ASC)
GO

ALTER TABLE [Reserva] 
 ADD CONSTRAINT [PK_Reserva]
	PRIMARY KEY CLUSTERED ([id_reserva] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Reserva_Evento] 
 ON [Reserva] ([id_evento] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Reserva_Usuario] 
 ON [Reserva] ([id_usuario] ASC)
GO

ALTER TABLE [Sala] 
 ADD CONSTRAINT [PK_Sala]
	PRIMARY KEY CLUSTERED ([id_sala] ASC)
GO

ALTER TABLE [TipoComponente] 
 ADD CONSTRAINT [PK_TipoComponente]
	PRIMARY KEY CLUSTERED ([id_tipo_componente] ASC)
GO

ALTER TABLE [TipoDocumento] 
 ADD CONSTRAINT [PK_TipoDocumento]
	PRIMARY KEY CLUSTERED ([id_tipo_documento] ASC)
GO

ALTER TABLE [Usuario] 
 ADD CONSTRAINT [PK_Usuario]
	PRIMARY KEY CLUSTERED ([id_usuario] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Usuario_TipoDocumento] 
 ON [Usuario] ([id_tipo_documento] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Componente] ADD CONSTRAINT [FK_Componente_Componente]
	FOREIGN KEY ([id_componente_padre]) REFERENCES [Componente] ([id_componente]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Componente] ADD CONSTRAINT [FK_Componente_TipoComponente]
	FOREIGN KEY ([id_tipo_componente]) REFERENCES [TipoComponente] ([id_tipo_componente]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ComponentePerfil] ADD CONSTRAINT [FK_ComponentePerfil_Componente]
	FOREIGN KEY ([id_componente]) REFERENCES [Componente] ([id_componente]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [ComponentePerfil] ADD CONSTRAINT [FK_ComponentePerfil_Perfil]
	FOREIGN KEY ([id_perfil]) REFERENCES [Perfil] ([id_perfil]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Evento] ADD CONSTRAINT [FK_Evento_Sala]
	FOREIGN KEY ([id_sala]) REFERENCES [Sala] ([id_sala]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Evento] ADD CONSTRAINT [FK_Evento_Usuario]
	FOREIGN KEY ([id_usuario]) REFERENCES [Usuario] ([id_usuario]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [PerfilUsuario] ADD CONSTRAINT [FK_PerfilUsuario_Perfil]
	FOREIGN KEY ([id_perfil]) REFERENCES [Perfil] ([id_perfil]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [PerfilUsuario] ADD CONSTRAINT [FK_PerfilUsuario_Usuario]
	FOREIGN KEY ([id_usuario]) REFERENCES [Usuario] ([id_usuario]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Reserva] ADD CONSTRAINT [FK_Reserva_Evento]
	FOREIGN KEY ([id_evento]) REFERENCES [Evento] ([id_evento]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Reserva] ADD CONSTRAINT [FK_Reserva_Usuario]
	FOREIGN KEY ([id_usuario]) REFERENCES [Usuario] ([id_usuario]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Usuario] ADD CONSTRAINT [FK_Usuario_TipoDocumento]
	FOREIGN KEY ([id_tipo_documento]) REFERENCES [TipoDocumento] ([id_tipo_documento]) ON DELETE No Action ON UPDATE No Action
GO
